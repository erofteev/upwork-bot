import "dotenv/config"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
import TelegramBot from "node-telegram-bot-api"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Bot API
import Parser from "rss-parser"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ RSS —Ñ–∏–¥–æ–≤
import { JSONFilePreset } from "lowdb/node"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç lowdb –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON –∫–∞–∫ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
import translate from "translate";

//import runKeepAliveServer from "./keep_alive.js"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
//// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
//runKeepAliveServer();

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const defaultData = { links: [] };

// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ db.json –∏–ª–∏ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å defaultData
const db = await JSONFilePreset("db.json", defaultData);

// –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä RSS –ø–∞—Ä—Å–µ—Ä–∞
const parser = new Parser();

// –§–æ—Ä–º–∏—Ä—É–µ—Ç URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ Upwork, –∏—Å–ø–æ–ª—å–∑—É—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const formUpworkURL = () => {
  return `${process.env.UPWORK_URL}?` + `client_hires=1-9%2C10-&` + `paging=NaN-undefined&` + `payment_verified=1&` + `proposals=0-4%2C5-9%2C10-14&` + `q=${process.env.UPWORK_QUERY}&` + `sort=recency&` + `t=1&` + `api_params=1&` + `securityToken=${process.env.UPWORK_SECURITY_TOKEN}&` + `userUid=${process.env.UPWORK_USER_UID}&` + `orgUid=${process.env.UPWORK_ORG_UID}`;
};

// –°–æ–∑–¥–∞—ë—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegram –∏ –≤–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –æ–ø—Ä–æ—Å–∞
const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞
const setBotCommands = () => {
  bot.setMyCommands([
    { command: "/start", description: "Hello message" },
    { command: "/clear", description: "Clear the database" },
  ]);
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
const handleStartCommand = () => {
  bot.onText(/\/start/, (msg) => {
    bot.sendMessage(msg.chat.id, "Hello, I'm Upwork RSS Bot");
  });
};

const handleClearCommand = () => {
  bot.onText(/\/clear/, () => {
    db.data.links = [];
    db.write();
  });
};

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ "content"
const parseContent = (content) => {
  return content.replaceAll("<br />", "\n").replaceAll("&bull;", "‚Ä¢").replaceAll("&quot;", '"').replaceAll("&nbsp;", " ").replace(/<b>/g, "").replace(/<\/b>/g, "");
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
const formatAndSendMessage = async (item) => {
  let content = parseContent(item.content);

  const lines = content
    .split("\n")
    .map((line) => line.trim())
    .filter((line) => line);

  let description = "";
  let budget, postedOn, country, skills, applyLink;
  let skillsFound = false;

  lines.forEach((line) => {
    if (line.startsWith("Budget") || line.startsWith("Hourly Range")) {
      budget = `üí∞ <b>${line.startsWith("Budget") ? "–ë—é–¥–∂–µ—Ç" : "–ß–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞"}:</b>${line.split(":")[1]}`;
    } else if (line.startsWith("Posted On")) {
      const dateStr = line.substring("Posted On:".length).trim();
      const date = new Date(dateStr);
      const formattedDate = date
        .toLocaleString("ru-RU", {
          day: "2-digit",
          month: "2-digit",
          year: "numeric",
          hour: "2-digit",
          minute: "2-digit",
          timeZone: "UTC",
          timeZoneName: "short",
        })
        .replace(",", "");
      postedOn = `üìÖ <b>–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ:</b> ${formattedDate}`;
    } else if (line.startsWith("Country")) {
      country = `üåç <b>–°—Ç—Ä–∞–Ω–∞:</b>${line.split(":")[1]}`;
    } else if (line.includes("click to apply")) {
      applyLink = `üîó <a href="${item.link}">–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É</a>`;
    } else if (line.startsWith("Skills") && !skillsFound) {
      skills = `üõ† <b>–ù–∞–≤—ã–∫–∏:</b> ${line.replace("Skills:", "").replace(/ {2,}/g, " ").trim()}`;
      skillsFound = true;
    } else if (!line.startsWith("Category") && !line.startsWith("Skills") && !line.startsWith("Country") && !line.startsWith("Budget") && !line.startsWith("Hourly Range") && !line.startsWith("Posted On")) {
      description += `${line} `;
    }
  });

  if (!applyLink) {
    applyLink = `üîó <a href="${item.link}">–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É</a>`;
  }

  description = description.trim().replace(/\n{2,}/g, "\n\n");

  const titleAndDescription = `<b>${item.title.replace(" - Upwork", "")}</b>\n\n${description}`;
  const additionalParams = `${budget || ""}\n${postedOn || ""}\n${skills || ""}\n${country || ""}\n\n${applyLink || ""}`;

  const translated = await translate(titleAndDescription, "ru");

  const finalMessage = `${translated}\n\n${additionalParams}`;

  bot.sendMessage(process.env.TELEGRAM_CHAT_ID, finalMessage, { parse_mode: "HTML" });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å—Å—ã–ª–æ–∫ –≤ RSS —Ñ–∏–¥–µ
const checkForNewLinks = async () => {
  try {
    const feed = await parser.parseURL(formUpworkURL());
    feed.items.forEach(async (item) => {
      if (db.data.links.includes(item.link)) return;

      console.log("Written:", item.link);
      db.data.links.push(item.link);
      await formatAndSendMessage(item);
    });

    db.write();
  } catch (error) {
    console.log("Error:", error);
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
const initBot = () => {
  setBotCommands();
  handleStartCommand();
  handleClearCommand();
  checkForNewLinks();
  setInterval(() => checkForNewLinks(), 30000);
};

// –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω");
initBot();
